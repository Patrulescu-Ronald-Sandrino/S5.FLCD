

%{
#include <stdio.h>
#include <errno.h>
#include <stdlib.h>
int line = 1;
%}


/* stop at 1st EOF https://www.quora.com/What-is-noyywrap-in-Lexhttps://www.quora.com/What-is-noyywrap-in-Lex */
%option noyywrap


IDENTIFIER [a-zA-Z_][a-zA-Z0-9_]*
INT_LITERAL 0|[+|-]?[1-9][0-9]*
CHAR_LITERAL ['][a-zA-Z0-9_=+\-*/<!>?:{}(),; ][']
STRING_LITERAL ["][a-zA-Z0-9_=+\-*/<!>?:{}(),; ]*["]


%%


"int"|"char"|"string"|"read"|"write"|"if"|"else"|"while" {printf("keyword: %s\n", yytext);}
"{"|"}"|"("|")"|";"|"," {printf("delimiter: %s\n", yytext);}
"="|"=="|"!="|"<"|">"|"<="|">=" {printf("operator: %s\n", yytext);}
"+"|"-"|"*"|"/" {printf("operator: %s\n", yytext);}
{IDENTIFIER} {printf("identifier: %s\n", yytext);}

{INT_LITERAL} {printf("integer literal: %s\n", yytext);}
{CHAR_LITERAL} {printf("character literal: %s\n", yytext);}
{STRING_LITERAL} {printf("string literal: %s\n", yytext);}

[ \t] {}
[\n] {line++;}
"//".* {} /* ignore comments */
. {printf("ERROR text=%s line=%d\n", yytext, line);}


%%

//int main( argc, argv )
//int argc;
//char **argv;
//int main(int argc, char **argv)
//{
//    yyin = argc == 2 ? fopen(argv[1], "r") : stdin;
//    yylex();
//}
